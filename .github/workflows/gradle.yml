name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: JDK 17 추가
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: 설정파일 생성
      - uses: actions/checkout@v3
      - run: touch ./src/main/resources/application.yaml
             echo "${{ secrets.SECRET_YAML }}" > ./src/main/resources/application.yaml
             cat ./src/main/resources/application.yaml

      - name: Github action IP 가져오기
        id: ip
        uses: haythem/public-ip@v1.2

      - name: AWS 인증
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_DEPLOY }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_KEY_DEPLOY }}
          aws-region: ap-northeast-2
       
      - name: 환경변수 설정
        run: |
          echo "AWS_DEFAULT_REGION=ap-northeast-2" >> $GITHUB_ENV
          echo "AWS_SG_NAME=group-for-all" >> $GITHUB_ENV
     
      - name: Github Actions IP를 보안 그룹에 추가
        run: |
          aws ec2 authorize-security-group-ingress --group-name ${{ env.AWS_SG_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32    
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_DEPLOY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_KEY_DEPLOY }}
          AWS_DEFAULT_REGION: ap-northeast-2
        
      - name: gradlew에 실행 권한 부여
        run: chmod +x gradlew
        
      - name: 프로젝트 빌드
        run: ./gradlew clean build

      - name: Github Actions IP를 보안 그룹에서 삭제
        run: |
          aws ec2 revoke-security-group-ingress --group-name ${{ env.AWS_SG_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_DEPLOY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_KEY_DEPLOY }}
          AWS_DEFAULT_REGION: ap-northeast-2
          
      - name: S3에 업로드
        run: aws deploy push --application-name floney-dev
             --ignore-hidden-files 
             --s3-location s3://$AWS_S3_BUCKET/floney-dev-build/$GITHUB_SHA.zip --source .
             
      - name: EC2에 배포
        run: aws deploy create-deployment 
             --application-name floney-dev
             --deployment-config-name CodeDeployDefault.AllAtOnce 
             --deployment-group-name floney-dev
             --s3-location bucket=$AWS_S3_BUCKET,key=floney-dev-build/$GITHUB_SHA.zip,bundleType=zip
